name: Deploy to EC2 with Docker

on:
  pull_request:
    types: [closed]
    branches: [main]

jobs:
  deploy:
    if: |
      github.event.pull_request.merged == true &&
      github.head_ref == 'develop' &&
      contains(github.event.pull_request.title, '[deploy]')
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build Spring Boot JAR
        run: ./gradlew clean build -x test

      - name: Copy JAR to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          source: "build/libs/*.jar"
          target: "~/app"

      - name: Upload application-prod.yml to EC2
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          script: |
            cat <<EOF > ~/app/application-prod.yml
  ${{ secrets.APPLICATION_PROD_YML }}
  EOF

  - name: Remote Deploy on EC2
    uses: appleboy/ssh-action@v1.0.3
    with:
      host: ${{ secrets.EC2_HOST }}
      username: ${{ secrets.EC2_USER }}
      key: ${{ secrets.EC2_KEY }}
      script: |
        docker stop spring-app || true
        docker rm spring-app || true
        JAR_NAME=$(ls /home/ubuntu/app/*.jar | head -n 1)
        docker run -d \
          --name spring-app \
          --network app-network \
          -e SPRING_PROFILES_ACTIVE=prod \
          -e SPRING_REDIS_HOST=${{ secrets.SPRING_REDIS_HOST }} \
          -e SPRING_REDIS_PORT=${{ secrets.SPRING_REDIS_PORT }} \
          -e SPRING_REDIS_PASSWORD=${{ secrets.SPRING_REDIS_PASSWORD }} \
          -e SPRING_DATASOURCE_USERNAME=${{ secrets.SPRING_DATASOURCE_USERNAME }} \
          -e SPRING_DATASOURCE_PASSWORD=${{ secrets.SPRING_DATASOURCE_PASSWORD }} \
          -e SPRING_MAIL_PASSWORD=${{ secrets.SPRING_MAIL_PASSWORD }} \
          -e JWT_SECRET=${{ secrets.JWT_SECRET }} \
          -e AWS_ACCESS_KEY=${{ secrets.AWS_ACCESS_KEY }} \
          -e AWS_SECRET_KEY=${{ secrets.AWS_SECRET_KEY }} \
          -e COOLSMS_KEY=${{ secrets.COOLSMS_KEY }} \
          -e COOLSMS_SECRET=${{ secrets.COOLSMS_SECRET }} \
          -p 8080:8080 \
          -v ~/app:/app \
          openjdk:17-jdk \
          java -jar "$JAR_NAME" \
          --spring.config.location=file:/app/application-prod.yml
