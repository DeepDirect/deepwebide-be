name: Zero-Downtime Deploy to EC2 with Docker

on:
  pull_request:
    types: [closed]
    branches: [main]

jobs:
  deploy:
    if: |
      github.event.pull_request.merged == true &&
      github.head_ref == 'develop' &&
      contains(github.event.pull_request.title, '[deploy]')
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build Spring Boot JAR
        run: ./gradlew clean build -x test

      - name: Copy JAR to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          source: "build/libs/*-SNAPSHOT.jar"
          target: "~/app"
          strip_components: 2

#      - name: Copy deployment script to EC2
#        uses: appleboy/scp-action@v0.1.7
#        with:
#          host: ${{ secrets.EC2_HOST }}
#          username: ${{ secrets.EC2_USER }}
#          key: ${{ secrets.EC2_KEY }}
#          source: "deploy-zero-downtime.sh"
#          target: "~/app/"

      - name: Zero-Downtime Deploy
        uses: appleboy/ssh-action@v1.0.3
        env:
          SPRING_REDIS_HOST: ${{ secrets.SPRING_REDIS_HOST }}
          SPRING_REDIS_PORT: ${{ secrets.SPRING_REDIS_PORT }}
          SPRING_REDIS_PASSWORD: ${{ secrets.SPRING_REDIS_PASSWORD }}
          SPRING_DATASOURCE_USERNAME: ${{ secrets.SPRING_DATASOURCE_USERNAME }}
          SPRING_DATASOURCE_PASSWORD: ${{ secrets.SPRING_DATASOURCE_PASSWORD }}
          SPRING_MAIL_PASSWORD: ${{ secrets.SPRING_MAIL_PASSWORD }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY }}
          AWS_SECRET_KEY: ${{ secrets.AWS_SECRET_KEY }}
          COOLSMS_KEY: ${{ secrets.COOLSMS_KEY }}
          COOLSMS_SECRET: ${{ secrets.COOLSMS_SECRET }}
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          envs: SPRING_REDIS_HOST,SPRING_REDIS_PORT,SPRING_REDIS_PASSWORD,SPRING_DATASOURCE_USERNAME,SPRING_DATASOURCE_PASSWORD,SPRING_MAIL_PASSWORD,JWT_SECRET,AWS_ACCESS_KEY,AWS_SECRET_KEY,COOLSMS_KEY,COOLSMS_SECRET
          command_timeout: 10m
          script: |
            echo "🚀 무중단 배포 시작..."
            
            # 스크립트 실행 권한 부여
            cd ~/app
            chmod +x deploy-zero-downtime.sh
            
            # 무중단 배포 스크립트가 있으면 실행, 없으면 기존 방식
            if [ -f "deploy-zero-downtime.sh" ]; then
              echo "📦 무중단 배포 실행 중..."
              ./deploy-zero-downtime.sh
            else
              echo "⚠️  무중단 배포 스크립트가 없습니다. 기존 방식으로 배포합니다."
              bash deploy.sh
            fi
            
            # 배포 결과 확인
            echo "=== 🔍 배포 완료 상태 확인 ==="
            echo "Docker 컨테이너 상태:"
            docker ps | grep spring-app || echo "spring-app 컨테이너 없음"
            
            echo "서비스 헬스체크:"
            sleep 5
            if curl -s -k https://api.deepdirect.site/health > /dev/null 2>&1; then
              echo "✅ HTTPS 서비스 정상"
            else
              echo "❌ HTTPS 서비스 응답 없음"
            fi
            
            # 로컬 포트 체크
            for port in 8080 8081; do
              if curl -s http://localhost:$port/actuator/health > /dev/null 2>&1; then
                echo "✅ 로컬 포트 $port 정상"
              else
                echo "❌ 로컬 포트 $port 응답 없음"
              fi
            done

      - name: Deployment Success Notification
        if: success()
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          script: |
            echo ""
            echo "🎉 ================================"
            echo "✅ 무중단 배포 성공!"
            echo "🌐 서비스 URL: https://api.deepdirect.site"
            echo "📅 배포 시간: $(date '+%Y-%m-%d %H:%M:%S')"
            echo "👤 배포자: ${{ github.actor }}"
            echo "📝 브랜치: ${{ github.head_ref }}"
            echo "🔗 커밋: ${{ github.sha }}"
            echo "================================="
            echo ""
            
            echo "📊 현재 활성 컨테이너:"
            docker ps --format "table {{.Names}}\t{{.Status}}\t{{.Ports}}" | grep spring-app || echo "컨테이너 정보 없음"
            
            echo ""
            echo "💾 현재 Nginx 업스트림:"
            sudo grep -A 3 "upstream app_backend" /etc/nginx/conf.d/app.conf 2>/dev/null || echo "Nginx 설정 확인 불가"

      - name: Deployment Failure Notification
        if: failure()
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          script: |
            echo ""
            echo "🚨 ================================"
            echo "❌ 무중단 배포 실패!"
            echo "📅 실패 시간: $(date '+%Y-%m-%d %H:%M:%S')"
            echo "👤 배포 시도자: ${{ github.actor }}"
            echo "📝 브랜치: ${{ github.head_ref }}"
            echo "================================="
            echo ""
            
            echo "🔍 디버깅 정보:"
            echo "현재 컨테이너 상태:"
            docker ps -a | grep spring-app || echo "spring-app 관련 컨테이너 없음"
            
            echo ""
            echo "📋 최근 로그 (Blue):"
            docker logs spring-app-blue --tail 5 2>/dev/null || echo "Blue 컨테이너 로그 없음"
            
            echo ""
            echo "📋 최근 로그 (Green):"
            docker logs spring-app-green --tail 5 2>/dev/null || echo "Green 컨테이너 로그 없음"
            
            echo ""
            echo "🔧 시스템 상태:"
            echo "디스크 사용량: $(df -h / | awk 'NR==2{print $5}')"
            echo "메모리 사용량: $(free -h | awk 'NR==2{printf "%.1f%%", $3/$2*100}')"